apiVersion: batch/v1
kind: Job
metadata:
  name: initdb
  namespace: keycloak
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: psql
        image: bitnami/postgresql:16
        command: ["/bin/bash", "-c"]
        args:
          - |
            set -e

            echo "Generating user creation SQL..."
            cat <<EOF > /tmp/init.sql
            DO \$\$
            BEGIN
              IF NOT EXISTS (
                SELECT FROM pg_catalog.pg_roles WHERE rolname = '{{ .KeycloakUser }}'
              ) THEN
                EXECUTE format('CREATE ROLE %I LOGIN PASSWORD %L', '{{ .KeycloakUser }}', '{{ .KeycloakPassword }}');
              END IF;
            END
            \$\$;
            EOF

            echo "Substituting variables..."
            sed -i "s/{{ .KeycloakUser }}/$(KEYCLOAK_USER)/g" /tmp/init.sql
            sed -i "s/{{ .KeycloakPassword }}/$(KEYCLOAK_PASSWORD)/g" /tmp/init.sql

            echo "Running user creation script..."
            psql -h postgresql -U "$POSTGRES_USER" -f /tmp/init.sql

            echo "Checking if database '$KEYCLOAK_DB' exists..."
            DB_EXISTS=$(psql -h postgresql -U "$POSTGRES_USER" -tAc "SELECT 1 FROM pg_database WHERE datname = '$KEYCLOAK_DB'")
            if [ "$DB_EXISTS" != "1" ]; then
              echo "Creating database '$KEYCLOAK_DB'..."
              psql -h postgresql -U "$POSTGRES_USER" -c "CREATE DATABASE \"$KEYCLOAK_DB\" OWNER \"$KEYCLOAK_USER\""
            else
              echo "Database '$KEYCLOAK_DB' already exists."
            fi
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-initdb
              key: postgresql-admin-password
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: keycloak-postgresql-user
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: keycloak-postgresql-password
        - name: KEYCLOAK_DB
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: keycloak-postgresql-database