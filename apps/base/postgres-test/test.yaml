apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-tester-script
  namespace: postgres-test
data:
  entrypoint.sh: |
    #!/bin/bash
    set -e

    DB_HOST=${POSTGRES_HOST:-postgres}
    DB_PORT=${POSTGRES_PORT:-5432}
    DB_ADMIN_USER=${POSTGRES_ADMIN_USER:-postgres}
    DB_ADMIN_PASSWORD=${POSTGRES_ADMIN_PASSWORD}

    SERVICE_DB=${SERVICE_DB:-testdb}
    SERVICE_USER=${SERVICE_USER:-testuser}
    SERVICE_PASSWORD=${SERVICE_PASSWORD:-testpass}
    LOG_TABLE=log_entries

    export PGPASSWORD=$DB_ADMIN_PASSWORD

    echo "checking if user '$SERVICE_USER' exists..."
    USER_EXISTS=$(psql -h $DB_HOST -U $DB_ADMIN_USER -d postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='$SERVICE_USER'")
    if [[ "$USER_EXISTS" == "1" ]]; then
      echo "user exists: $SERVICE_USER"
    else
      echo "creating user $SERVICE_USER"
      psql -h $DB_HOST -U $DB_ADMIN_USER -d postgres -c "CREATE USER $SERVICE_USER WITH PASSWORD '$SERVICE_PASSWORD';"
    fi

    echo "checking if database '$SERVICE_DB' exists..."
    DB_EXISTS=$(psql -h $DB_HOST -U $DB_ADMIN_USER -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname='$SERVICE_DB'")
    if [[ "$DB_EXISTS" == "1" ]]; then
      echo "database exists: $SERVICE_DB"
    else
      echo "creating database $SERVICE_DB owned by $SERVICE_USER"
      psql -h $DB_HOST -U $DB_ADMIN_USER -d postgres -c "CREATE DATABASE $SERVICE_DB OWNER $SERVICE_USER;"
    fi

    echo "ensuring log table exists..."
    PGPASSWORD=$SERVICE_PASSWORD psql -h $DB_HOST -U $SERVICE_USER -d $SERVICE_DB -c "
      CREATE TABLE IF NOT EXISTS $LOG_TABLE (
        id SERIAL PRIMARY KEY,
        log_time TIMESTAMPTZ DEFAULT now(),
        message TEXT
      );
    "

    echo "starting log writer..."
    while true; do
      MSG="heartbeat at $(date -Is)"
      echo "$MSG"
      PGPASSWORD=$SERVICE_PASSWORD psql -h $DB_HOST -U $SERVICE_USER -d $SERVICE_DB -c "INSERT INTO $LOG_TABLE (message) VALUES ('$MSG');"
      sleep 5
    done

---
apiVersion: v1
kind: Pod
metadata:
  name: postgres-tester
  namespace: postgres-test
spec:
  containers:
    - name: tester
      image: postgres:16
      command: ["/bin/bash", "/scripts/entrypoint.sh"]
      env:
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: postgres-test
              key: postgresql-host
        - name: POSTGRES_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: postgres-test
              key: postgresql-admin-user
        - name: POSTGRES_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-test
              key: postgresql-admin-password
        - name: SERVICE_DB
          value: "testdb"
        - name: SERVICE_USER
          value: "testuser"
        - name: SERVICE_PASSWORD
          value: "testpass"
      volumeMounts:
        - name: script
          mountPath: /scripts
  restartPolicy: Always
  volumes:
    - name: script
      configMap:
        name: postgres-tester-script
        defaultMode: 0755